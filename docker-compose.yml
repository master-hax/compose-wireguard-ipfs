version: "3.7"
services:

  ipfs-node:
    image: lscr.io/linuxserver/ipfs
    restart: unless-stopped
    network_mode: service:vpn-sidecar
    depends_on:
      - vpn-sidecar
    volumes:
      - ipfs-node-data-volume:/config
      - downloads-volume:/downloads

  web-proxy:
    image: dperson/nginx
    restart: unless-stopped
    networks:
      - default
      - isolated_vpn_network
    environment:
      - PROXY=http://ipfs-node:5001;/ # for API & web UI
      - STREAM=8080;ipfs-node:8080    # for IPFS gateway
    ports:
      - 5001:80/tcp
      - 8080:8080/tcp
    links:
      - vpn-sidecar:ipfs-node
    depends_on:
      - ipfs-node
    read_only: true
    tmpfs:
      - /run
      - /tmp
      - /var/cache/nginx

  vpn-sidecar:
    image: lscr.io/linuxserver/wireguard
    restart: unless-stopped
    networks:
      - isolated_vpn_network
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    volumes:
      - /lib/modules:/lib/modules
      - wgclient-data-volume:/config
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=0 # for raspberry pi compatibility?

volumes:
  ipfs-node-data-volume: # go-ipfs application files - change to a persistent location
    driver_opts:
        type: tmpfs
        device: tmpfs
  downloads-volume: # (optional) file download location - change to a persistent location
    driver_opts:
        type: tmpfs
        device: tmpfs
  wgclient-data-volume: # writeable location of wg0.conf
    driver: local
    driver_opts:
        o: bind
        type: none
        device: "$PWD/wireguard/"

networks:
  default:
  isolated_vpn_network:
